---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<style>
  main {
    width: calc(100% - 2em);
    /* max-width: 100%; */
    margin: auto;
    padding: 1em 0.5em;
  }
  .hero-image {
    width: 100%;
  }
  .hero-image img {
    display: block;
    margin: 0 auto;
    border-radius: 12px;
    box-shadow: var(--box-shadow);
    aspect-ratio: 2/1;
    object-fit: cover;
  }
  /* .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  } */
  /* .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  } */
  /* .title h1 {
    margin: 0 0 0.5em 0;
  } */
  .date {
    /* margin-bottom: 0.5em; */
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }
</style>

<main>
  <article>
    <div class='hero-image'>
      {
        heroImage ? (
          <img
            transition:name={`img:${title}`}
            width={1020}
            height={510}
            src={heroImage}
            alt=''
          />
        ) : (
          <img
            width={1020}
            height={510}
            src='blog-placeholder-about.jpg'
            alt=''
          />
        )
      }
    </div>
    <div class='prose prose-sm'>
      <div class='text-center'>
        <div class='date'>
          <FormattedDate transition:name={`date:${pubDate}`} date={pubDate} />
          {
            updatedDate && (
              <div class='last-updated-on'>
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <h1 transition:name={`title:${title}`}>{title}</h1>
        <hr />
      </div>
      <slot />
    </div>
  </article>
</main>
